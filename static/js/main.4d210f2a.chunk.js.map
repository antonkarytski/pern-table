{"version":3,"sources":["components/Table/FilteredTable/FilteredTable.module.scss","Styles.module.scss","components/Buttons/Buttons.module.scss","helpers/helpers.tsx","settings/comparisonMethods.ts","hooks/hook.filter.ts","components/Buttons/Button.tsx","components/Buttons/ButtonsSet.tsx","settings/server.ts","hooks/hook.data.ts","components/Table/Table.tsx","components/Input/Select.tsx","components/Input/Input.tsx","components/FilterMenu/FilterMenu.tsx","components/Table/FilteredTable/FilteredTable.tsx","App.tsx","index.tsx","components/Table/Table.module.scss"],"names":["module","exports","filterKeys","object","exceptedFields","Object","keys","filter","fieldName","includes","COMPARISON_METHODS_LIST","equal","controlValue","sourceValue","contain","normalizedControlValue","toLowerCase","more","less","useHeadFilter","data","useState","length","head","setHead","useEffect","Button","className","label","props","cx","classes","ButtonsSet","buttonsCount","onClick","activeIndex","Array","fill","map","e","index","button","buttonActive","el","REQUEST_HEAD","method","headers","Accept","useServerData","setData","onLoading","setOnLoading","onError","setOnError","getData","useCallback","a","fetch","rawResponse","ok","json","response","useDataRequest","rawData","useMemo","fullDate","date","restProps","slice","Table","renderSettings","recordsPerPage","isUsePagination","usePagination","page","setPage","wordsToRender","pagesCount","Math","ceil","useSlice","TableWrap","TableContainer","key","tableRecord","headName","id","Pagination","PaginationButton","Active","Select","options","onChange","name","value","option","word","toUpperCase","Input","type","htmlFor","FilterMenu","fields","onFilter","field","comparisonMethodName","form","setForm","formUpdateHandler","currentTarget","FilteredTable","filterSettings","initialData","filteredData","setFilteredData","filterData","methodName","comparisonMethod","useFilter","filteredFields","Menu","App","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d210f2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilteredTable\":\"FilteredTable_FilteredTable__2X0vA\",\"Menu\":\"FilteredTable_Menu__ww9B-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Styles_Main__Y9Gx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Buttons_Button__3RFCb\"};","export function setFirstLetterToCapital(word: string): string {\r\n  return word[0].toUpperCase() + word.slice(1);\r\n}\r\n\r\nexport function filterKeys(\r\n  object: { [key: string]: unknown },\r\n  exceptedFields: string[]\r\n) {\r\n  return Object.keys(object).filter(\r\n    (fieldName) => !exceptedFields.includes(fieldName)\r\n  );\r\n}\r\n\r\nexport function getDateFromFullDate(fullDate: string): string {\r\n  return fullDate.slice(0, 10);\r\n}\r\n","type ComparisonMethod = (\n  controlValue: number | string,\n  sourceValue: number | string\n) => boolean;\n\ntype ComparisonMethodsList = {\n  [key: string]: ComparisonMethod;\n};\n\nexport const COMPARISON_METHODS_LIST: ComparisonMethodsList = {\n  equal: (controlValue, sourceValue) => controlValue === sourceValue,\n  contain: (controlValue, sourceValue) => {\n    const normalizedControlValue = (\"\" + controlValue).toLowerCase();\n    const normalizedSourceValue = (\"\" + sourceValue).toLowerCase();\n    return normalizedSourceValue.includes(normalizedControlValue);\n  },\n  more: (controlValue, sourceValue) => controlValue < sourceValue,\n  less: (controlValue, sourceValue) => controlValue > sourceValue,\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport { filterKeys } from \"../helpers/helpers\";\nimport { SchemaField, TableSchema } from \"../types\";\nimport { OnFilter } from \"../components/FilterMenu/FilterMenu\";\nimport { COMPARISON_METHODS_LIST } from \"../settings/comparisonMethods\";\n\nexport function useHeadFilter(\n  data: TableSchema[],\n  exceptedFields: SchemaField[]\n) {\n  const [head, setHead] = useState(\n    (() => {\n      if (!data.length) return [];\n      return filterKeys(data[0], exceptedFields);\n    })()\n  );\n\n  useEffect(() => {\n    if (!data.length) return;\n    setHead(filterKeys(data[0], exceptedFields));\n  }, [data, exceptedFields]);\n\n  return head;\n}\n\nexport function useFilter(initialData: TableSchema[]) {\n  const [filteredData, setFilteredData] = useState(initialData);\n\n  const filterData: OnFilter = useCallback(\n    (controlValue, methodName, field) => {\n      if (!controlValue) {\n        setFilteredData(initialData);\n        return;\n      }\n      const comparisonMethod = COMPARISON_METHODS_LIST[methodName];\n\n      setFilteredData(\n        initialData.filter((tableRecord: TableSchema) => {\n          return comparisonMethod(controlValue, tableRecord[field]);\n        })\n      );\n    },\n    [initialData]\n  );\n\n  return { filteredData, filterData };\n}\n","import React, { ReactComponentElement, SyntheticEvent } from \"react\";\r\nimport cx from \"classnames\";\r\nimport classes from \"./Buttons.module.scss\";\r\n\r\nexport type ButtonProps = {\r\n  onClick: (event: SyntheticEvent) => unknown;\r\n  className?: string;\r\n  label?: number | string | ReactComponentElement<any>;\r\n};\r\n\r\nexport default function Button({ className, label, ...props }: ButtonProps) {\r\n  return (\r\n    <button className={cx(classes.Button, className)} {...props}>\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport Button from \"./Button\";\r\n\r\ninterface ButtonSetProps {\r\n  buttonsCount: number;\r\n  onClick: (index: number) => unknown;\r\n  activeIndex: number;\r\n  className: string;\r\n  classes?: {\r\n    button?: string;\r\n    buttonActive?: string;\r\n  };\r\n}\r\n\r\nexport default function ButtonsSet({\r\n  buttonsCount,\r\n  onClick,\r\n  activeIndex,\r\n  className,\r\n  classes,\r\n}: ButtonSetProps) {\r\n  return (\r\n    <div className={className}>\r\n      {Array(buttonsCount)\r\n        .fill(null)\r\n        .map((e, index) => {\r\n          return (\r\n            <Button\r\n              className={cx(\r\n                classes?.button,\r\n                classes?.buttonActive && {\r\n                  [classes.buttonActive]: index === activeIndex,\r\n                }\r\n              )}\r\n              key={`buttonSet${className}Key${index}`}\r\n              onClick={() => onClick(index)}\r\n              label={index + 1}\r\n            />\r\n          );\r\n        })\r\n        .filter((el, index) => {\r\n          return (\r\n            index === 0 ||\r\n            (activeIndex < 4 && index < 6) ||\r\n            (activeIndex > buttonsCount - 5 && index > buttonsCount - 7) ||\r\n            index === buttonsCount - 1 ||\r\n            index === activeIndex ||\r\n            (index < activeIndex && index >= activeIndex - 2) ||\r\n            (index > activeIndex && index <= activeIndex + 2)\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n","export const SERVER = \"https://pern-table-distance-data.herokuapp.com\";\r\nexport const REQUEST_HEAD = {\r\n  method: \"GET\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { TableSchema } from \"../types\";\r\nimport { REQUEST_HEAD, SERVER } from \"../settings/server\";\r\nimport { getDateFromFullDate } from \"../helpers/helpers\";\r\n\r\nexport function useDataRequest() {\r\n  const [data, setData] = useState([]);\r\n  const [onLoading, setOnLoading] = useState(false);\r\n  const [onError, setOnError] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setOnError(false);\r\n    setOnLoading(true);\r\n    const rawResponse = await fetch(\r\n      `${SERVER}/api/data/allrecords`,\r\n      REQUEST_HEAD\r\n    );\r\n    if (rawResponse.ok) {\r\n      const response = await rawResponse.json();\r\n      setData(response);\r\n    } else {\r\n      setOnError(true);\r\n    }\r\n    setOnLoading(false);\r\n  }, []);\r\n\r\n  return { data, getData, onLoading, onError };\r\n}\r\n\r\nexport function useServerData() {\r\n  const { getData, data: rawData, onLoading, onError } = useDataRequest();\r\n  const data = useMemo(() => {\r\n    return rawData.map(({ date, ...restProps }: TableSchema) => {\r\n      return { ...restProps, date: getDateFromFullDate(date) };\r\n    });\r\n  }, [rawData]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, onLoading, onError };\r\n}\r\n\r\nexport function useSlice(\r\n  data: TableSchema[],\r\n  recordsPerPage: number\r\n): TableSchema[][] {\r\n  return useMemo(() => {\r\n    if (recordsPerPage === data.length) return [data];\r\n    const pagesCount = Math.ceil(data.length / recordsPerPage);\r\n    return Array(pagesCount)\r\n      .fill(null)\r\n      .map((el, index) => {\r\n        return data.slice(index * recordsPerPage, recordsPerPage * (index + 1));\r\n      });\r\n  }, [data, recordsPerPage]);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { SchemaField, TableSchema } from \"../../types\";\r\nimport classes from \"./Table.module.scss\";\r\nimport { useHeadFilter } from \"../../hooks/hook.filter\";\r\nimport ButtonsSet from \"../Buttons/ButtonsSet\";\r\nimport { useSlice } from \"../../hooks/hook.data\";\r\n\r\nexport interface TableProps {\r\n  data: TableSchema[];\r\n  renderSettings: {\r\n    exceptedFields: SchemaField[];\r\n    recordsPerPage: number;\r\n    usePagination: boolean;\r\n  };\r\n  onLoading: boolean;\r\n}\r\n\r\nexport default function Table({\r\n  data,\r\n  renderSettings: {\r\n    exceptedFields,\r\n    recordsPerPage,\r\n    usePagination: isUsePagination,\r\n  },\r\n  onLoading,\r\n}: TableProps) {\r\n  const [page, setPage] = useState(0);\r\n  const wordsToRender = useSlice(\r\n    data,\r\n    isUsePagination ? recordsPerPage : data.length\r\n  );\r\n  const head = useHeadFilter(data, exceptedFields);\r\n\r\n  useEffect(() => {\r\n    const pagesCount = Math.ceil(data.length / recordsPerPage);\r\n    if (page + 1 > pagesCount) setPage(pagesCount);\r\n  }, [data, recordsPerPage, page]);\r\n\r\n  return (\r\n    <div className={classes.TableWrap}>\r\n      <div className={classes.TableContainer}>\r\n        <table className={classes.Table}>\r\n          <thead>\r\n            <tr>\r\n              {head.map((key, index) => {\r\n                return <th key={key + index}>{key}</th>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {onLoading\r\n              ? \"Загрузка...\"\r\n              : wordsToRender[page]?.map((tableRecord, index) => {\r\n                  return (\r\n                    <tr key={\"row\" + tableRecord.id + index}>\r\n                      {head.map((headName) => {\r\n                        return (\r\n                          <td key={`${tableRecord.id}${headName}${index}`}>\r\n                            {tableRecord[headName as SchemaField]}\r\n                          </td>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {isUsePagination ? (\r\n        <ButtonsSet\r\n          buttonsCount={wordsToRender.length || 1}\r\n          onClick={(index) => setPage(index)}\r\n          className={classes.Pagination}\r\n          activeIndex={page}\r\n          classes={{\r\n            button: classes.PaginationButton,\r\n            buttonActive: classes.Active,\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport { setFirstLetterToCapital } from \"../../helpers/helpers\";\r\n\r\ntype SelectProps = {\r\n  options: string[];\r\n  onChange: (event: SyntheticEvent<HTMLSelectElement>) => unknown;\r\n  name: string;\r\n  value: string;\r\n  label?: string;\r\n  [key: string]: unknown;\r\n};\r\n\r\nexport default function Select({\r\n  options,\r\n  onChange,\r\n  name,\r\n  value,\r\n  label,\r\n  ...props\r\n}: SelectProps) {\r\n  return (\r\n    <div>\r\n      {label ? <span>{label} </span> : null}\r\n      <select name={name} onChange={onChange} value={value} {...props}>\r\n        {options.map((option, index) => {\r\n          return (\r\n            <option value={option} key={`option${name}${option}${index}`}>\r\n              {setFirstLetterToCapital(option)}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React, { SyntheticEvent } from \"react\";\r\n\r\ntype InputProps = {\r\n  type: string;\r\n  name: string;\r\n  value: string;\r\n  onChange: (event: SyntheticEvent<HTMLInputElement>) => unknown;\r\n  label?: string;\r\n  [key: string]: unknown;\r\n};\r\n\r\nexport default function Input({\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  label,\r\n  ...props\r\n}: InputProps) {\r\n  return (\r\n    <div>\r\n      <label htmlFor={`inputId${name}`}>{label}</label>\r\n      <input\r\n        id={`inputId${name}`}\r\n        onChange={onChange}\r\n        type={type}\r\n        value={value}\r\n        name={name}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport Select from \"../Input/Select\";\nimport { COMPARISON_METHODS_LIST } from \"../../settings/comparisonMethods\";\nimport Input from \"../Input/Input\";\nimport { SchemaField } from \"../../types\";\n\nexport type OnFilter = (\n  controlValue: string,\n  methodName: string,\n  field: SchemaField\n) => unknown;\n\ninterface FilterMenuProps {\n  fields: SchemaField[];\n  onFilter: OnFilter;\n  className: string;\n}\n\nexport default function FilterMenu({\n  fields,\n  onFilter,\n  className,\n}: FilterMenuProps) {\n  const [form, setForm] = useState({\n    field: fields[0],\n    comparisonMethodName: Object.keys(COMPARISON_METHODS_LIST)[0],\n    controlValue: \"\",\n  });\n\n  function formUpdateHandler({\n    currentTarget,\n  }: SyntheticEvent<HTMLSelectElement | HTMLInputElement>) {\n    const { value, name } = currentTarget;\n    setForm({ ...form, [name]: value });\n  }\n\n  useEffect(() => {\n    const { controlValue, comparisonMethodName, field } = form;\n    onFilter(controlValue, comparisonMethodName, field);\n  }, [form, onFilter]);\n\n  return (\n    <div className={className}>\n      <Select\n        label={\"Field for filter: \"}\n        options={fields}\n        onChange={formUpdateHandler}\n        name={\"field\"}\n        value={form.field}\n      />\n      <Select\n        label={\"Filter method: \"}\n        options={Object.keys(COMPARISON_METHODS_LIST)}\n        onChange={formUpdateHandler}\n        name={\"comparisonMethodName\"}\n        value={form.comparisonMethodName}\n      />\n      <Input\n        label={\"Value: \"}\n        type={\"text\"}\n        name={\"controlValue\"}\n        value={form.controlValue}\n        onChange={formUpdateHandler}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Table, { TableProps } from \"../Table\";\nimport FilterMenu from \"../../FilterMenu/FilterMenu\";\nimport { SchemaField } from \"../../../types\";\nimport { useFilter, useHeadFilter } from \"../../../hooks/hook.filter\";\nimport classes from \"./FilteredTable.module.scss\";\n\ninterface FilteredTableProps extends TableProps {\n  filterSettings: {\n    exceptedFields: SchemaField[];\n  };\n}\n\nexport default function FilteredTable({\n  filterSettings: { exceptedFields },\n  renderSettings,\n  data,\n  onLoading,\n}: FilteredTableProps) {\n  const { filteredData, filterData } = useFilter(data);\n  const filteredFields = useHeadFilter(data, exceptedFields) as SchemaField[];\n\n  return (\n    <div className={classes.FilteredTable}>\n      <FilterMenu\n        className={classes.Menu}\n        fields={filteredFields}\n        onFilter={filterData}\n      />\n      <Table\n        data={filteredData}\n        renderSettings={renderSettings}\n        onLoading={onLoading}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./Styles.module.scss\";\nimport FilteredTable from \"./components/Table/FilteredTable/FilteredTable\";\nimport { useServerData } from \"./hooks/hook.data\";\n\nfunction App() {\n  const { data, onLoading } = useServerData();\n\n  return (\n    <div className={classes.Main}>\n      <FilteredTable\n        onLoading={onLoading}\n        data={data}\n        filterSettings={{ exceptedFields: [\"id\", \"date\"] }}\n        renderSettings={{\n          exceptedFields: [\"id\"],\n          recordsPerPage: 20,\n          usePagination: true,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableWrap\":\"Table_TableWrap__3N_4k\",\"TableContainer\":\"Table_TableContainer__3QgG5\",\"Pagination\":\"Table_Pagination__2R4Hu\",\"PaginationButton\":\"Table_PaginationButton__jAVb1\",\"Active\":\"Table_Active__2ihP4\",\"Table\":\"Table_Table__2dUf3\"};"],"sourceRoot":""}